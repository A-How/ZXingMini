buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }
}

group = 'com.github.yoojia'
version = '0.1'

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 13
        targetSdkVersion 21
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

def siteUrl = 'https://github.com/yoojia/MiniZXing'
def gitUrl = 'https://github.com/yoojia/MiniZXing.git'

bintray {
    user = BINTRAY_USER
    key = BINTRAY_KEY

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'android'
        name = 'MiniZXing'
        desc = 'An easy to use library for ZXing QRCode support library'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/yoojia/MiniZXing/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['Android', 'QRCode', 'ZXing']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'A wrap library of Android ZXing'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'yoojia'
                        name 'Yoojia.Chen'
                        email 'Yoojia.chen@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
